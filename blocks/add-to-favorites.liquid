{% schema %}
{
  "name": "Add to Favorites",
  "target": "section",
  "stylesheet": "add-to-favorites.css",
  "javascript": "add-to-favorites.js",
  "settings": [
    {
      "type": "color",
      "id": "heart_color",
      "label": "Heart Color",
      "default": "#ff0000"
    },
    {
      "type": "range",
      "id": "heart_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heart Size",
      "default": 32
    }
  ]
}
{% endschema %}

<div class="favorite-button" data-product-id="{{ product.id }}">
  <button class="favorite-btn" aria-label="Add to favorites">
    <svg class="heart-icon" width="{{ block.settings.heart_size }}" height="{{ block.settings.heart_size }}" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path class="heart-path" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" stroke="{{ block.settings.heart_color }}" stroke-width="2" fill="none"/>
    </svg>
  </button>
</div>

<style>
.favorite-button {
  display: inline-block;
  margin: 10px 0;
}

.favorite-btn {
  background: none;
  border: none;
  padding: 8px;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.favorite-btn:hover {
  transform: scale(1.1);
}

.heart-icon {
  transition: all 0.3s ease;
}

.heart-path {
  transition: fill 0.3s ease;
}

.favorite-btn.active .heart-path {
  fill: {{ block.settings.heart_color }};
}
</style>

<script>
class FavoriteButton {
  constructor() {
    this.button = document.querySelector('.favorite-btn');
    this.productId = this.button.closest('.favorite-button').dataset.productId;
    this.init();
  }

  init() {
    this.loadFavorites();
    this.button.addEventListener('click', () => this.toggleFavorite());
  }

  loadFavorites() {
    const favorites = JSON.parse(localStorage.getItem('favorites') || '[]');
    if (favorites.includes(this.productId)) {
      this.button.classList.add('active');
    }
  }

  toggleFavorite() {
    const favorites = JSON.parse(localStorage.getItem('favorites') || '[]');
    const index = favorites.indexOf(this.productId);

    if (index === -1) {
      favorites.push(this.productId);
      this.button.classList.add('active');
    } else {
      favorites.splice(index, 1);
      this.button.classList.remove('active');
    }

    localStorage.setItem('favorites', JSON.stringify(favorites));
  }
}

// Initialize the favorite button
document.addEventListener('DOMContentLoaded', () => {
  new FavoriteButton();
});
</script> 