{%- liquid
  assign social_icons = true
  if settings.social_facebook_link == blank and settings.social_instagram_link == blank and settings.social_youtube_link == blank and settings.social_tiktok_link == blank and settings.social_twitter_link == blank and settings.social_pinterest_link == blank and settings.social_snapchat_link == blank and settings.social_tumblr_link == blank and settings.social_vimeo_link == blank
    assign social_icons = false
  endif
-%}

<div class="custom-announcement-bar color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} custom-announcement-bar--bottom-border{% endif %}"
  style="
    --gradient-start: {{ section.settings.gradient_start }};
    --gradient-end: {{ section.settings.gradient_end }};
    --text-color: {{ section.settings.text_color }};
    --font-size: {{ section.settings.font_size }}px;
  "
>
  <div class="page-width custom-announcement-bar__grid">
    {%- if section.settings.show_social and social_icons -%}
      <div class="custom-announcement-bar__social">
        {%- render 'social-icons' -%}
      </div>
    {%- endif -%}

    <div class="custom-announcement-bar__content">
      {%- if section.blocks.size > 0 -%}
        <div class="custom-announcement-slider" 
          data-autoplay="{{ section.settings.auto_rotate }}"
          data-speed="{{ section.settings.change_slides_speed }}"
        >
          {%- for block in section.blocks -%}
            <div class="custom-announcement-slide" {{ block.shopify_attributes }}>
              <div class="custom-announcement-bar__content content-align-{{ block.settings.text_alignment }}">
                {%- if block.settings.text != blank -%}
                  <div class="custom-announcement-text{% if section.settings.enable_animation %} animate-text{% endif %}">
                    {%- if block.settings.link != blank -%}
                      <a href="{{ block.settings.link }}" class="custom-announcement-link">
                    {%- endif -%}
                    
                    <span class="announcement-message">{{ block.settings.text | escape }}</span>
                    
                    {%- if block.settings.link != blank -%}
                      <span class="announcement-arrow">â†’</span>
                      </a>
                    {%- endif -%}
                  </div>
                {%- endif -%}

                {%- if block.settings.show_countdown and block.settings.countdown_date != blank -%}
                  <div class="countdown-timer">
                    <span class="countdown-label">{{ block.settings.countdown_label }}</span>
                    <div class="countdown-display">
                      <span class="days">00</span>d
                      <span class="hours">00</span>h
                      <span class="minutes">00</span>m
                      <span class="seconds">00</span>s
                    </div>
                  </div>
                {%- endif -%}
              </div>
            </div>
          {%- endfor -%}
        </div>
      {%- endif -%}
    </div>

    <div class="custom-announcement-bar__utilities">
      {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
        <div class="country-selector">
          {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form' -%}
            {%- render 'country-localization', localPosition: 'HeaderCountry' -%}
          {%- endform -%}
        </div>
      {%- endif -%}

      {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
        <div class="language-selector">
          {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form' -%}
            {%- render 'language-localization', localPosition: 'HeaderLanguage' -%}
          {%- endform -%}
        </div>
      {%- endif -%}
    </div>
  </div>
</div>

<style>
.custom-announcement-bar {
  padding: 10px 0;
  background: linear-gradient(to right, var(--gradient-start), var(--gradient-end));
  color: var(--text-color);
  font-size: var(--font-size);
}

.custom-announcement-bar__grid {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  gap: 20px;
}

.custom-announcement-slider {
  position: relative;
  overflow: hidden;
  width: 100%;
}

.custom-announcement-slide {
  padding: 5px 0;
  width: 100%;
}

.custom-announcement-text {
  display: flex;
  align-items: center;
  gap: 5px;
  width: 100%;
}

/* Text alignment classes */
.text-left {
  justify-content: flex-start;
  text-align: left;
  margin-right: auto;
  padding-left: 20px;
}

.text-center {
  justify-content: center;
  text-align: center;
  margin: 0 auto;
}

.text-right {
  justify-content: flex-end;
  text-align: right;
  margin-left: auto;
  padding-right: 20px;
}

.animate-text {
  animation: slideIn 0.5s ease-out;
}

@keyframes slideIn {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.countdown-timer {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-top: 5px;
  width: 100%;
}

/* Countdown timer alignment */
.countdown-timer.text-left {
  justify-content: flex-start;
  padding-left: 20px;
}

.countdown-timer.text-center {
  justify-content: center;
}

.countdown-timer.text-right {
  justify-content: flex-end;
  padding-right: 20px;
}

.countdown-display {
  font-weight: bold;
  display: flex;
  gap: 5px;
}

.custom-announcement-link {
  color: inherit;
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  gap: 5px;
  transition: opacity 0.3s ease;
}

.custom-announcement-link:hover {
  opacity: 0.8;
}

.announcement-arrow {
  transition: transform 0.3s ease;
}

.custom-announcement-link:hover .announcement-arrow {
  transform: translateX(5px);
}

/* Responsive adjustments */
@media screen and (max-width: 749px) {
  .text-left,
  .text-right,
  .countdown-timer.text-left,
  .countdown-timer.text-right {
    padding-left: 10px;
    padding-right: 10px;
  }
}

.custom-announcement-bar__content {
  display: flex;
  width: 100%;
}

.content-align-left {
  justify-content: flex-start;
}
.content-align-center {
  justify-content: center;
}
.content-align-right {
  justify-content: flex-end;
}
</style>

<script>
  class CustomAnnouncementBar extends HTMLElement {
    constructor() {
      super();
      this.slider = this.querySelector('.custom-announcement-slider');
      this.slides = this.querySelectorAll('.custom-announcement-slide');
      this.currentSlide = 0;
      this.autoplay = this.slider?.dataset.autoplay === 'true';
      this.speed = parseInt(this.slider?.dataset.speed || 5) * 1000;
      
      if (this.autoplay && this.slides.length > 1) {
        this.startAutoplay();
      }

      this.initializeCountdowns();
    }

    startAutoplay() {
      setInterval(() => {
        this.nextSlide();
      }, this.speed);
    }

    nextSlide() {
      this.slides[this.currentSlide].style.display = 'none';
      this.currentSlide = (this.currentSlide + 1) % this.slides.length;
      this.slides[this.currentSlide].style.display = 'block';
    }

    initializeCountdowns() {
      const countdowns = this.querySelectorAll('.countdown-timer');
      countdowns.forEach(countdown => {
        const endDate = new Date(countdown.dataset.endDate).getTime();
        
        const updateCountdown = () => {
          const now = new Date().getTime();
          const distance = endDate - now;

          if (distance < 0) {
            countdown.style.display = 'none';
            return;
          }

          const days = Math.floor(distance / (1000 * 60 * 60 * 24));
          const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
          const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
          const seconds = Math.floor((distance % (1000 * 60)) / 1000);

          countdown.querySelector('.days').textContent = String(days).padStart(2, '0');
          countdown.querySelector('.hours').textContent = String(hours).padStart(2, '0');
          countdown.querySelector('.minutes').textContent = String(minutes).padStart(2, '0');
          countdown.querySelector('.seconds').textContent = String(seconds).padStart(2, '0');
        };

        updateCountdown();
        setInterval(updateCountdown, 1000);
      });
    }
  }

  customElements.define('custom-announcement-bar', CustomAnnouncementBar);
</script>

{% schema %}
{
  "name": "Custom Announcement Bar",
  "max_blocks": 12,
  "class": "custom-announcement-bar-section",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "color",
      "id": "gradient_start",
      "label": "Gradient Start Color",
      "default": "#4A90E2"
    },
    {
      "type": "color",
      "id": "gradient_end",
      "label": "Gradient End Color",
      "default": "#50E3C2"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#FFFFFF"
    },
    {
      "type": "range",
      "id": "font_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Font Size",
      "default": 14
    },
    {
      "type": "checkbox",
      "id": "auto_rotate",
      "label": "Auto-rotate announcements",
      "default": true
    },
    {
      "type": "range",
      "id": "change_slides_speed",
      "min": 3,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Change slides every",
      "default": 5
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "Show line separator"
    },
    {
      "type": "checkbox",
      "id": "enable_animation",
      "default": true,
      "label": "Enable text animation"
    },
    {
      "type": "checkbox",
      "id": "show_social",
      "default": false,
      "label": "Show social icons"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "Enable country selector"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "Enable language selector"
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "Announcement",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Welcome to our store!",
          "label": "Announcement text"
        },
        {
          "type": "select",
          "id": "text_alignment",
          "label": "Text alignment",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Announcement link"
        },
        {
          "type": "checkbox",
          "id": "show_countdown",
          "label": "Show countdown timer",
          "default": false
        },
        {
          "type": "text",
          "id": "countdown_label",
          "label": "Countdown label",
          "default": "Ends in:"
        },
        {
          "type": "text",
          "id": "countdown_date",
          "label": "Countdown end date (YYYY-MM-DD HH:mm:ss)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Announcement Bar",
      "blocks": [
        {
          "type": "announcement"
        }
      ]
    }
  ]
}
{% endschema %}
